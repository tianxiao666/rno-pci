package com.hgicreate.rno.lte.pciafp.mapper;

import com.hgicreate.rno.lte.pciafp.model.InterMatrix;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Arrays;
import java.util.List;

@RunWith(SpringRunner.class)
@SpringBootTest
public class DataMapperTest {

    @Autowired
    private DataMapper dataMapper;

    @Before
    public void setUp() throws Exception {
    }

    @Test
    public void getLatestMatrixByCityId() {
        long areaId = 440200;
        List<InterMatrix> list = dataMapper.getLatestMatrixByCityId(areaId);
        Assert.assertNotNull("list为空",list);
    }

    @Test
    public void getLatestMatrixByCityIdAndCells() {
        long areaId = 440200;
        List<String> cells = Arrays.asList("704596-11", "827666-131", "827414-133", "703854-13", "704585-12", "708544-11", "827489-132", "719032-13", "718824-12", "718401-11", "718754-23", "718951-12", "718498-13", "703796-12", "203467-133", "827245-131", "718398-11", "703909-13", "703619-11", "703498-12", "827257-132", "203469-131", "661499-11", "703805-13", "719035-12", "827354-133", "718470-11", "718470-12", "203355-132", "203355-133", "203414-133", "827461-133", "718903-13", "203358-132", "703512-13", "661365-13", "203099-131", "827186-133", "708539-12", "827309-131", "827309-132", "704555-11", "827878-131", "661725-11", "203115-132", "719034-13", "203225-132", "661489-13", "827278-131", "703708-12", "203411-132", "203357-131", "203100-131", "203100-133", "703562-11", "718917-13", "661375-32", "203103-133", "661717-11", "661717-12", "704625-13", "718954-12", "703970-11", "703821-11", "827037-131", "203448-133", "203297-132", "203297-133", "203155-131", "718997-13", "661690-12", "203514-133", "718587-12", "718520-12", "661477-11", "661481-11", "827105-143", "661482-13", "203302-131", "827157-133", "827056-131", "661709-12", "703889-12", "703635-11", "719102-13", "827251-132", "826983-133", "708444-21", "203468-131", "718518-11", "661614-21", "703545-12", "827390-131", "661492-11", "703806-13", "203373-132", "704640-11", "661407-12", "661505-12", "203065-131", "703974-12", "703506-11", "718949-13", "661674-11", "661461-13", "661368-13", "703740-12", "703771-13", "703823-13", "827243-133", "718997-12", "661720-11", "827020-131", "718543-11", "718543-12", "203292-131", "203292-132", "661713-13", "203515-131", "827970-133", "703603-13", "203444-131", "203444-133", "704601-13", "827457-131", "661710-11", "203071-131", "703501-11", "826880-131", "826880-132", "718579-12", "718755-21", "703603-11", "661507-13", "718507-12", "827164-132", "703749-11", "661715-11", "203156-132", "827117-131", "661373-13", "827036-132", "718867-21", "661515-12", "827185-132", "203430-132", "203430-133", "203163-131", "718354-11", "703944-12", "703640-13", "827455-133", "708513-13", "703584-13", "704560-21", "718339-13", "703907-11", "703907-13", "703761-11", "718932-11", "718932-12", "203024-132", "703583-32", "703761-12", "703761-13", "703583-13", "827192-131", "703649-11", "703649-13", "827304-131", "827085-132", "703647-13", "718567-11", "718567-12", "718567-13", "704593-12", "718560-11", "703535-11", "704592-12", "718562-13", "826894-131", "703596-11", "703596-12", "718490-13", "718955-11", "703642-12", "703600-12", "718559-13", "704651-11", "203345-133", "718506-12", "827254-132", "827254-133", "704655-12", "704655-13", "718512-11", "718512-13", "718549-11", "703552-11", "703552-12", "203460-133", "703604-13", "703803-11", "718563-12", "661646-12", "827310-132", "703652-11", "718555-13", "703525-11", "661734-11", "661734-13", "203231-132", "718556-11", "718556-12", "703552-13", "703934-11", "826979-131", "826979-133", "718911-12", "661459-11", "718356-13", "203431-132", "203344-131", "718953-12", "703748-11", "703748-13", "203462-132", "203463-132", "718955-12", "718955-13", "718494-12", "704661-13", "703642-11", "827084-132", "827084-133", "718505-13", "718516-12", "703861-12", "718754-21", "203476-131", "203476-132", "203345-131", "703622-12", "827197-132", "708376-21", "718824-13", "718401-12", "703499-12", "718497-12", "661731-12", "718417-11", "661500-11", "661500-12", "661500-13", "704585-13", "203473-133", "719076-11", "827489-131", "719076-12", "718495-11", "708383-21", "718824-11", "203343-133", "718511-11", "703664-13", "708382-21", "203452-131", "203453-131", "203453-132", "203454-132", "703832-11", "703832-12", "703832-13", "827253-131", "203455-133", "718365-12", "661499-12", "661499-13", "719031-13", "718475-11", "718365-13", "703796-11", "718464-12", "703498-11", "718448-11", "203467-132", "203466-131", "703805-11", "703814-12", "718493-11", "719091-12", "703792-11", "703792-12", "703792-13", "203469-132", "827630-131", "827630-132", "718922-12", "703795-11", "718374-11", "718374-12", "718374-13", "718454-12", "703804-11", "703809-13", "718477-12", "827786-131", "827786-132", "703814-112", "703598-13", "703790-13", "203213-132", "827657-131", "704625-11", "704625-12", "827627-132", "661501-13", "718527-11", "718527-13", "718954-13", "827248-132", "719091-13", "703656-11", "708536-21", "203470-131", "203470-132", "203470-133", "704521-21", "827782-133", "827781-132", "827781-133", "703546-11", "203468-132", "718518-12", "718748-21", "703932-11", "703932-31", "661501-11", "203465-132", "661497-11", "703547-11", "703547-13", "661498-11", "703637-13", "661517-112", "718461-12", "718457-12", "827090-132", "718408-12", "718787-11", "718787-12", "704600-12", "704600-13", "661516-11", "661516-13", "703545-11", "703545-13", "661517-11", "718457-13", "703786-11", "827088-131", "203508-131", "719070-11", "719070-12", "203155-133", "719026-12", "827204-132", "827204-133", "203449-131", "661515-13", "203221-132", "203221-133", "703806-12", "703974-11", "203446-131", "827023-131", "203446-132", "827163-132", "661480-12", "827194-131", "827800-131", "827194-132", "718692-21", "827194-133", "718850-21", "661720-31", "827346-131", "661720-33", "718901-21", "203156-131", "718950-13", "203513-131", "827164-133", "703969-11", "718950-11", "703683-11", "703550-11", "703550-12", "661453-13", "827706-131", "203396-131", "718369-11", "661711-13", "203224-131", "203224-132", "203299-132", "708452-21", "661493-11", "203449-133", "203347-132", "703749-13", "827444-131", "661479-13", "703970-12", "718987-11", "203177-131", "203177-132", "203177-133", "718492-13", "827444-132", "203448-131", "703740-13", "661369-12", "661478-11", "827348-131", "827348-132", "827348-133", "827725-131", "718517-13", "203447-131", "661482-11", "703636-13", "703741-12", "661369-13", "203305-132", "827021-131", "203305-133", "661372-12", "827853-131", "203065-132", "826978-133", "827037-132", "718827-21", "203300-131", "203300-132", "708358-21", "661374-11", "661477-12", "661613-21", "718412-11", "718412-12", "203516-132", "718933-11", "661489-12", "661488-13", "203440-131", "203440-132", "661674-12", "661674-13", "203162-131", "827162-132", "703695-11", "203288-132", "703695-13", "203224-133", "203299-133", "827165-131", "661482-12", "703866-12", "827035-131", "827492-133", "827157-132", "661622-121", "718455-12", "718460-11", "661467-12", "661467-13", "827056-132", "661709-11", "203394-133", "703632-12", "827559-131", "827161-133", "703823-32", "703491-11", "703491-111", "703889-13", "703491-112", "719102-11", "203451-132", "203301-133", "703786-12", "661711-11", "703786-13", "703534-11", "827472-132", "827472-131", "703974-13", "203301-131", "703506-13", "703495-11", "703495-12", "661481-13", "827105-132", "827105-133", "708445-21", "827163-131", "661480-11", "203353-133", "718386-13", "661465-11", "703719-12", "661465-13", "703719-13", "661675-11", "661693-11", "203518-132", "661458-11", "661458-12", "719007-13", "718949-11", "718949-12", "704601-11", "661476-13", "827195-133", "203297-131", "203193-132", "203193-133", "827137-132", "703857-12", "703857-13", "827307-131", "719026-13", "661710-12", "719030-11", "719030-12", "203154-131");
        List<InterMatrix> list = dataMapper.getLatestMatrixByCityIdAndCells(areaId, cells);
        Assert.assertNotNull("list为空",list);
    }

    @Test
    public void getLteCellsByCityId() {

    }
}